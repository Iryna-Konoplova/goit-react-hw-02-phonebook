{"version":3,"sources":["components/ContactForm/ContactForm.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","type","pattern","title","required","onChange","Component","ContactListItem","ContactList","contacts","map","contact","App","formSubmitHandler","data","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOA6DeA,E,4MAxDXC,MAAQ,CACJC,KAAM,GACNC,OAAQ,I,EAGZC,aAAe,SAAAC,GACX,MAAwBA,EAAEC,cAAlBJ,EAAR,EAAQA,KAAMK,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiBN,EAAOK,K,EAG5BE,aAAe,SAAAJ,GACXA,EAAEK,iBAEF,EAAKC,MAAMC,SAAS,EAAKX,OACzB,EAAKY,S,EAGTA,MAAQ,WACJ,EAAKL,SAAS,CAAEN,KAAM,GAAIC,OAAQ,M,4CAGtC,WACI,OACI,uBAAMS,SAAUE,KAAKL,aAArB,UACI,yCAEI,uBACIM,KAAK,OACLb,KAAK,OACLc,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRX,MAAOO,KAAKb,MAAMC,KAClBiB,SAAUL,KAAKV,kBAGvB,2CAEI,uBACIW,KAAK,MACLb,KAAK,SACLc,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRX,MAAOO,KAAKb,MAAME,OAClBgB,SAAUL,KAAKV,kBAIvB,wBAAQW,KAAK,SAAb,gC,GAlDUK,aCOXC,EAPS,SAAC,GAAD,IAAEnB,EAAF,EAAEA,KAAF,OACpB,6BAEE,4BAAKA,OCcIoB,EAfK,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAClB,6BACGA,EAASC,KAAI,SAACC,GAAD,OACZ,cAAC,EAAD,CAGEvB,KAAMuB,EAAQvB,aCkBPwB,E,4MArBXzB,MAAQ,CACJsB,SAAU,I,EAGdI,kBAAoB,SAAAC,GAChBC,QAAQC,IAAIF,I,4CAIhB,WACI,OACI,qCACI,cAAC,EAAD,CAAahB,SAAUE,KAAKa,oBAC5B,cAAC,EAAD,CAAaJ,SAAUT,KAAKb,MAAMsB,kB,GAdhCH,a,MCElBW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.08eea955.chunk.js","sourcesContent":["// Модули\r\nimport React, { Component } from 'react';\r\n\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n    };\r\n\r\n    handleChange = e => {\r\n        const { name, value } = e.currentTarget;\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        // console.log(this.state);\r\n        this.props.onSubmit(this.state);\r\n        this.reset();\r\n    };\r\n\r\n    reset = () => {\r\n        this.setState({ name: '', number: '' });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <label>\r\n                    Name\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        required\r\n                        value={this.state.name}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </label>\r\n                <label>\r\n                    Number\r\n                    <input\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                        required\r\n                        value={this.state.number}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </label>\r\n\r\n                <button type=\"submit\">Add contact</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default ContactForm;","// Модули\r\nimport React from 'react';\r\n\r\n\r\nconst ContactListItem = ({name}) =>\r\n    <li >\r\n \r\n      <p >{name}</p>\r\n    </li>\r\n\r\n\r\nexport default ContactListItem;","// Модули\r\nimport React from 'react';\r\n\r\n// Компоненты\r\nimport ContactListItem from '../ContactListItem/ContactListItem';\r\n\r\nconst ContactList = ({ contacts }) => (\r\n  <ul >\r\n    {contacts.map((contact) => (\r\n      <ContactListItem\r\n        // key={contact.id}\r\n        // avatar={friend.avatar}\r\n        name={contact.name}\r\n        // isOnline={friend.isOnline}\r\n      />\r\n    )\r\n    )}\r\n  </ul>\r\n);\r\n\r\n\r\nexport default ContactList;","// Модули\r\nimport React, { Component } from 'react';\r\n\r\n// Компоненты\r\nimport ContactForm from './components/ContactForm';\r\nimport ContactList from './components/ContactList';\r\n\r\n\r\nclass App extends Component {\r\n    state = {\r\n        contacts: [],\r\n    };\r\n\r\n    formSubmitHandler = data => {\r\n        console.log(data);\r\n        // this.setState.contacts(contacts.push(data))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <ContactForm onSubmit={this.formSubmitHandler} />\r\n                <ContactList contacts={this.state.contacts}/>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default App;","// Модули\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n// Компоненты\nimport App from './App';\n\n// Стили\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);"],"sourceRoot":""}