{"version":3,"sources":["components/ContactForm/ContactForm.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["ContactForm","state","name","number","nameInputId","shortid","generate","numberInputId","handleChange","e","currentTarget","value","setState","id","handleSubmit","preventDefault","props","onSubmit","reset","this","htmlFor","type","pattern","title","required","onChange","Component","ContactListItem","ContactList","contacts","map","contact","Filter","App","filter","formSubmitHandler","prevState","changeFilter","getVisibleContacts","normalizedFilter","toLowerCase","includes","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eef2c60d.chunk.js","sourcesContent":["// Модули\nimport React, { Component } from 'react';\nimport shortid from 'shortid';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  nameInputId = shortid.generate();\n\n  numberInputId = shortid.generate();\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ id: shortid.generate(), [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    // console.log(this.state);\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label htmlFor={this.nameInputId}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={this.state.name}\n            onChange={this.handleChange}\n            id={this.nameInputId}\n          />\n        </label>\n        <label htmlFor={this.numberInputId}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            value={this.state.number}\n            onChange={this.handleChange}\n            id={this.numberInputId}\n          />\n        </label>\n\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","// Модули\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ContactListItem = ({ name, number }) => (\n  <li>\n    <p>{name}: { number}</p>\n  </li>\n);\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  // number : PropTypes.number.isRequired\n}\n\nexport default ContactListItem;\n","// Модули\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// Компоненты\nimport ContactListItem from '../ContactListItem/ContactListItem';\n\nconst ContactList = ({ contacts }) => (\n  <ul>\n    {contacts.map(contact => (\n      <ContactListItem\n        key={contact.id}\n        number={contact.number}\n        name={contact.name}\n      />\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n   contacts: PropTypes.array.isRequired\n};\n\nexport default ContactList;\n","// Модули\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n    return (\r\n        <label >\r\n            Find contacts by name\r\n            <input\r\n                type=\"text\"\r\n                name=\"filter\"\r\n                value={value}\r\n                onChange={onChange}\r\n            // id={this.nameInputId}\r\n            />\r\n        </label>\r\n    );\r\n};\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired\r\n};\r\n\r\n\r\nexport default Filter;","// Модули\nimport React, { Component } from 'react';\n// import shortid from 'shortid';\n\n// Компоненты\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\n\nclass App extends Component {\n  state = {\n    contacts:  [\n    {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n    {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n    ],\n    filter: ''\n  };\n\n  // formSubmitHandler = data => {\n  //   console.log(data);\n  //   // this.setState.contacts(contacts.push(data))\n\n  // };\n\n  formSubmitHandler = ({id, name, number}) => {\n    this.setState((prevState) => ({\n      contacts: [...prevState.contacts, { id, name, number }],\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n    getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    \n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm contacts={contacts} onSubmit={this.formSubmitHandler} />\n       \n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter }/>\n        <ContactList contacts={visibleContacts} onChange={ this.changeFilter}/>\n      </div> \n    );\n  }\n}\n\nexport default App;\n","// Модули\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n// Компоненты\nimport App from './App';\n\n// Стили\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}